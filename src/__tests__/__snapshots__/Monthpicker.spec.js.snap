// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Monthpicker /> allows specifiyng the primary and secondary colors 1`] = `
.c5 {
  cursor: pointer;
  fill: red;
}

.c3 {
  cursor: pointer;
  fill: white;
  fill: red;
}

.c1 {
  margin-top: 8px;
  -webkit-transform-origin: top center;
  -ms-transform-origin: top center;
  transform-origin: top center;
  -webkit-animation: dXhcnZ .2s;
  animation: dXhcnZ .2s;
  position: absolute;
  box-shadow: 0 1px 3px #d3d3d380,0 1px 3px #d3d3d380;
  border: 1px solid green;
  border-radius: 4px;
  z-index: 10;
}

.c8 {
  border: 1px solid #d3d3d37a;
  padding: 12px 0;
  -webkit-transition: background-color .1s,color .1s;
  transition: background-color .1s,color .1s;
  font-size: 14px;
  background-color: green;
  color: red;
  height: 42px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-flex: 0 0 33.33%;
  -ms-flex: 0 0 33.33%;
  flex: 0 0 33.33%;
}

.c8:focus {
  outline: none;
}

.c9 {
  cursor: pointer;
  padding: 12px 0;
  -webkit-transition: background-color .1s,color .1s;
  transition: background-color .1s,color .1s;
  font-size: 14px;
  background-color: red;
  color: green;
  height: 42px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-flex: 0 0 33.33%;
  -ms-flex: 0 0 33.33%;
  flex: 0 0 33.33%;
}

.c9:hover {
  background-color: #d3d3d330;
}

.c9:focus {
  outline: none;
}

.c10 {
  cursor: pointer;
  padding: 12px 0;
  -webkit-transition: background-color .1s,color .1s;
  transition: background-color .1s,color .1s;
  font-size: 14px;
  background-color: red;
  color: green;
  height: 42px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-flex: 0 0 33.33%;
  -ms-flex: 0 0 33.33%;
  flex: 0 0 33.33%;
  border-bottom-left-radius: 4px;
}

.c10:hover {
  background-color: #d3d3d330;
}

.c10:focus {
  outline: none;
}

.c11 {
  cursor: pointer;
  padding: 12px 0;
  -webkit-transition: background-color .1s,color .1s;
  transition: background-color .1s,color .1s;
  font-size: 14px;
  background-color: red;
  color: green;
  height: 42px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-flex: 0 0 33.33%;
  -ms-flex: 0 0 33.33%;
  flex: 0 0 33.33%;
  border-bottom-right-radius: 4px;
}

.c11:hover {
  background-color: #d3d3d330;
}

.c11:focus {
  outline: none;
}

.c2 {
  padding: 16px 8px;
  font-weight: bold;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: green;
  color: red;
  border-top-left-radius: 4px;
  border-top-right-radius: 4px;
}

.c4 {
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.c0 * {
  box-sizing: border-box;
}

.c0:focus {
  outline: none;
}

.c7 {
  background-color: red;
  border-radius: 4px;
  width: 300px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.c6 {
  height: 8px;
  background-color: red;
  width: 100%;
}

<MonthPicker
  hoverColor="#d3d3d330"
  locale="de"
  month={1}
  onChange={[MockFunction]}
  primaryColor="green"
  secondaryColor="red"
  year={2018}
>
  <styled.div
    onKeyDown={[Function]}
    tabIndex={-1}
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bZQynM",
            "isStatic": true,
            "lastClassName": "c0",
            "rules": Array [
              "
  * {
    box-sizing: border-box;
  }

  &:focus {
    outline: none;
  }
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bZQynM",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={[Function]}
      onKeyDown={[Function]}
      tabIndex={-1}
    >
      <div
        className="c0"
        onKeyDown={[Function]}
        tabIndex={-1}
      >
        <div
          onClick={[Function]}
        >
          <div
            className="child"
          >
            Child
          </div>
        </div>
        <styled.div
          hoverColor="#d3d3d330"
          primaryColor="green"
          secondaryColor="red"
        >
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-htpNat",
                  "isStatic": false,
                  "lastClassName": "c1",
                  "rules": Array [
                    "
  margin-top: 8px;
  transform-origin: top center;
  animation: ",
                    Keyframes {
                      "id": "sc-keyframes-dXhcnZ",
                      "inject": [Function],
                      "name": "dXhcnZ",
                      "rules": Array [
                        "@-webkit-keyframes dXhcnZ{from{-webkit-transform:scaleY(0.95);-ms-transform:scaleY(0.95);transform:scaleY(0.95);opacity:0;}to{-webkit-transform:scaleY(1);-ms-transform:scaleY(1);transform:scaleY(1);opacity:1;}}",
                        "@keyframes dXhcnZ{from{-webkit-transform:scaleY(0.95);-ms-transform:scaleY(0.95);transform:scaleY(0.95);opacity:0;}to{-webkit-transform:scaleY(1);-ms-transform:scaleY(1);transform:scaleY(1);opacity:1;}}",
                      ],
                      "toString": [Function],
                    },
                    " .2s;
  position: absolute;
  box-shadow: 0 1px 3px #d3d3d380, 0 1px 3px #d3d3d380;
  border: 1px solid ",
                    [Function],
                    ";
  border-radius: 4px;
  z-index: 10;
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-htpNat",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            hoverColor="#d3d3d330"
            primaryColor="green"
            secondaryColor="red"
          >
            <div
              className="c1"
            >
              <styled.div
                hoverColor="#d3d3d330"
                primaryColor="green"
                secondaryColor="red"
              >
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-ifAKCX",
                        "isStatic": false,
                        "lastClassName": "c2",
                        "rules": Array [
                          "
  padding: 16px 8px;
  font-weight: bold;
  display: flex;
  justify-content: space-between;
  align-items: center;
  background-color: ",
                          [Function],
                          ";
  color: ",
                          [Function],
                          ";
  border-top-left-radius: 4px;
  border-top-right-radius: 4px;
",
                        ],
                      },
                      "displayName": "styled.div",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-ifAKCX",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  hoverColor="#d3d3d330"
                  primaryColor="green"
                  secondaryColor="red"
                >
                  <div
                    className="c2"
                  >
                    <_default
                      hoverColor="#d3d3d330"
                      onClick={[Function]}
                      primaryColor="green"
                      secondaryColor="red"
                    >
                      <styled.svg
                        height="24"
                        hoverColor="#d3d3d330"
                        onClick={[Function]}
                        primaryColor="green"
                        secondaryColor="red"
                        viewBox="0 0 24 24"
                        width="24"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-bwzfXH",
                                "isStatic": false,
                                "lastClassName": "c3",
                                "rules": Array [
                                  "
  cursor: pointer;
  fill: white;
  fill: ",
                                  [Function],
                                  ";
",
                                ],
                              },
                              "displayName": "styled.svg",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-bwzfXH",
                              "target": "svg",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          height="24"
                          hoverColor="#d3d3d330"
                          onClick={[Function]}
                          primaryColor="green"
                          secondaryColor="red"
                          viewBox="0 0 24 24"
                          width="24"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <svg
                            className="c3"
                            height="24"
                            onClick={[Function]}
                            viewBox="0 0 24 24"
                            width="24"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z"
                            />
                            <path
                              d="M0-.5h24v24H0z"
                              fill="none"
                            />
                          </svg>
                        </StyledComponent>
                      </styled.svg>
                    </_default>
                    <styled.span>
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-EHOje",
                              "isStatic": true,
                              "lastClassName": "c4",
                              "rules": Array [
                                "
  user-select: none;
",
                              ],
                            },
                            "displayName": "styled.span",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-EHOje",
                            "target": "span",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <span
                          className="c4"
                        >
                          2018
                        </span>
                      </StyledComponent>
                    </styled.span>
                    <_default
                      hoverColor="#d3d3d330"
                      onClick={[Function]}
                      primaryColor="green"
                      secondaryColor="red"
                    >
                      <styled.svg
                        height="24"
                        hoverColor="#d3d3d330"
                        onClick={[Function]}
                        primaryColor="green"
                        secondaryColor="red"
                        viewBox="0 0 24 24"
                        width="24"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-bdVaJa",
                                "isStatic": false,
                                "lastClassName": "c5",
                                "rules": Array [
                                  "
  cursor: pointer;
  fill: ",
                                  [Function],
                                  ";
",
                                ],
                              },
                              "displayName": "styled.svg",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-bdVaJa",
                              "target": "svg",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          height="24"
                          hoverColor="#d3d3d330"
                          onClick={[Function]}
                          primaryColor="green"
                          secondaryColor="red"
                          viewBox="0 0 24 24"
                          width="24"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <svg
                            className="c5"
                            height="24"
                            onClick={[Function]}
                            viewBox="0 0 24 24"
                            width="24"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"
                            />
                            <path
                              d="M0-.25h24v24H0z"
                              fill="none"
                            />
                          </svg>
                        </StyledComponent>
                      </styled.svg>
                    </_default>
                  </div>
                </StyledComponent>
              </styled.div>
              <styled.div
                hoverColor="#d3d3d330"
                primaryColor="green"
                secondaryColor="red"
              >
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-htoDjs",
                        "isStatic": false,
                        "lastClassName": "c6",
                        "rules": Array [
                          "
  height: 8px;
  background-color: ",
                          [Function],
                          ";
  width: 100%;
",
                        ],
                      },
                      "displayName": "styled.div",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-htoDjs",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  hoverColor="#d3d3d330"
                  primaryColor="green"
                  secondaryColor="red"
                >
                  <div
                    className="c6"
                  />
                </StyledComponent>
              </styled.div>
              <styled.div
                hoverColor="#d3d3d330"
                primaryColor="green"
                secondaryColor="red"
              >
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-gzVnrw",
                        "isStatic": false,
                        "lastClassName": "c7",
                        "rules": Array [
                          "
  background-color: ",
                          [Function],
                          ";
  border-radius: 4px;
  width: 300px;
  display: flex;
  flex-wrap: wrap;
",
                        ],
                      },
                      "displayName": "styled.div",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-gzVnrw",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  hoverColor="#d3d3d330"
                  primaryColor="green"
                  secondaryColor="red"
                >
                  <div
                    className="c7"
                  >
                    <styled.div
                      hoverColor="#d3d3d330"
                      index={0}
                      key="Jan"
                      onClick={[Function]}
                      primaryColor="green"
                      secondaryColor="red"
                      selected={true}
                    >
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-bxivhb",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "
  ",
                                [Function],
                                "

  &:focus {
    outline: none;
  }

  ",
                                [Function],
                                ";

  padding: 12px 0;
  transition: background-color .1s, color .1s;
  font-size: 14px;
  background-color: ",
                                [Function],
                                ";
  color: ",
                                [Function],
                                ";
  height: 42px;
  display: flex;
  justify-content: center;
  align-items: center;
  flex: 0 0 33.33%;

  border-bottom-right-radius: ",
                                [Function],
                                ";
  border-bottom-left-radius: ",
                                [Function],
                                ";
",
                              ],
                            },
                            "displayName": "styled.div",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-bxivhb",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        hoverColor="#d3d3d330"
                        index={0}
                        onClick={[Function]}
                        primaryColor="green"
                        secondaryColor="red"
                        selected={true}
                      >
                        <div
                          className="c8"
                          onClick={[Function]}
                          selected={true}
                        >
                          Jan
                        </div>
                      </StyledComponent>
                    </styled.div>
                    <styled.div
                      hoverColor="#d3d3d330"
                      index={1}
                      key="Feb"
                      onClick={[Function]}
                      primaryColor="green"
                      secondaryColor="red"
                      selected={false}
                    >
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-bxivhb",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "
  ",
                                [Function],
                                "

  &:focus {
    outline: none;
  }

  ",
                                [Function],
                                ";

  padding: 12px 0;
  transition: background-color .1s, color .1s;
  font-size: 14px;
  background-color: ",
                                [Function],
                                ";
  color: ",
                                [Function],
                                ";
  height: 42px;
  display: flex;
  justify-content: center;
  align-items: center;
  flex: 0 0 33.33%;

  border-bottom-right-radius: ",
                                [Function],
                                ";
  border-bottom-left-radius: ",
                                [Function],
                                ";
",
                              ],
                            },
                            "displayName": "styled.div",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-bxivhb",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        hoverColor="#d3d3d330"
                        index={1}
                        onClick={[Function]}
                        primaryColor="green"
                        secondaryColor="red"
                        selected={false}
                      >
                        <div
                          className="c9"
                          onClick={[Function]}
                          selected={false}
                        >
                          Feb
                        </div>
                      </StyledComponent>
                    </styled.div>
                    <styled.div
                      hoverColor="#d3d3d330"
                      index={2}
                      key="Mär"
                      onClick={[Function]}
                      primaryColor="green"
                      secondaryColor="red"
                      selected={false}
                    >
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-bxivhb",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "
  ",
                                [Function],
                                "

  &:focus {
    outline: none;
  }

  ",
                                [Function],
                                ";

  padding: 12px 0;
  transition: background-color .1s, color .1s;
  font-size: 14px;
  background-color: ",
                                [Function],
                                ";
  color: ",
                                [Function],
                                ";
  height: 42px;
  display: flex;
  justify-content: center;
  align-items: center;
  flex: 0 0 33.33%;

  border-bottom-right-radius: ",
                                [Function],
                                ";
  border-bottom-left-radius: ",
                                [Function],
                                ";
",
                              ],
                            },
                            "displayName": "styled.div",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-bxivhb",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        hoverColor="#d3d3d330"
                        index={2}
                        onClick={[Function]}
                        primaryColor="green"
                        secondaryColor="red"
                        selected={false}
                      >
                        <div
                          className="c9"
                          onClick={[Function]}
                          selected={false}
                        >
                          Mär
                        </div>
                      </StyledComponent>
                    </styled.div>
                    <styled.div
                      hoverColor="#d3d3d330"
                      index={3}
                      key="Apr"
                      onClick={[Function]}
                      primaryColor="green"
                      secondaryColor="red"
                      selected={false}
                    >
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-bxivhb",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "
  ",
                                [Function],
                                "

  &:focus {
    outline: none;
  }

  ",
                                [Function],
                                ";

  padding: 12px 0;
  transition: background-color .1s, color .1s;
  font-size: 14px;
  background-color: ",
                                [Function],
                                ";
  color: ",
                                [Function],
                                ";
  height: 42px;
  display: flex;
  justify-content: center;
  align-items: center;
  flex: 0 0 33.33%;

  border-bottom-right-radius: ",
                                [Function],
                                ";
  border-bottom-left-radius: ",
                                [Function],
                                ";
",
                              ],
                            },
                            "displayName": "styled.div",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-bxivhb",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        hoverColor="#d3d3d330"
                        index={3}
                        onClick={[Function]}
                        primaryColor="green"
                        secondaryColor="red"
                        selected={false}
                      >
                        <div
                          className="c9"
                          onClick={[Function]}
                          selected={false}
                        >
                          Apr
                        </div>
                      </StyledComponent>
                    </styled.div>
                    <styled.div
                      hoverColor="#d3d3d330"
                      index={4}
                      key="Mai"
                      onClick={[Function]}
                      primaryColor="green"
                      secondaryColor="red"
                      selected={false}
                    >
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-bxivhb",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "
  ",
                                [Function],
                                "

  &:focus {
    outline: none;
  }

  ",
                                [Function],
                                ";

  padding: 12px 0;
  transition: background-color .1s, color .1s;
  font-size: 14px;
  background-color: ",
                                [Function],
                                ";
  color: ",
                                [Function],
                                ";
  height: 42px;
  display: flex;
  justify-content: center;
  align-items: center;
  flex: 0 0 33.33%;

  border-bottom-right-radius: ",
                                [Function],
                                ";
  border-bottom-left-radius: ",
                                [Function],
                                ";
",
                              ],
                            },
                            "displayName": "styled.div",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-bxivhb",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        hoverColor="#d3d3d330"
                        index={4}
                        onClick={[Function]}
                        primaryColor="green"
                        secondaryColor="red"
                        selected={false}
                      >
                        <div
                          className="c9"
                          onClick={[Function]}
                          selected={false}
                        >
                          Mai
                        </div>
                      </StyledComponent>
                    </styled.div>
                    <styled.div
                      hoverColor="#d3d3d330"
                      index={5}
                      key="Jun"
                      onClick={[Function]}
                      primaryColor="green"
                      secondaryColor="red"
                      selected={false}
                    >
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-bxivhb",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "
  ",
                                [Function],
                                "

  &:focus {
    outline: none;
  }

  ",
                                [Function],
                                ";

  padding: 12px 0;
  transition: background-color .1s, color .1s;
  font-size: 14px;
  background-color: ",
                                [Function],
                                ";
  color: ",
                                [Function],
                                ";
  height: 42px;
  display: flex;
  justify-content: center;
  align-items: center;
  flex: 0 0 33.33%;

  border-bottom-right-radius: ",
                                [Function],
                                ";
  border-bottom-left-radius: ",
                                [Function],
                                ";
",
                              ],
                            },
                            "displayName": "styled.div",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-bxivhb",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        hoverColor="#d3d3d330"
                        index={5}
                        onClick={[Function]}
                        primaryColor="green"
                        secondaryColor="red"
                        selected={false}
                      >
                        <div
                          className="c9"
                          onClick={[Function]}
                          selected={false}
                        >
                          Jun
                        </div>
                      </StyledComponent>
                    </styled.div>
                    <styled.div
                      hoverColor="#d3d3d330"
                      index={6}
                      key="Jul"
                      onClick={[Function]}
                      primaryColor="green"
                      secondaryColor="red"
                      selected={false}
                    >
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-bxivhb",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "
  ",
                                [Function],
                                "

  &:focus {
    outline: none;
  }

  ",
                                [Function],
                                ";

  padding: 12px 0;
  transition: background-color .1s, color .1s;
  font-size: 14px;
  background-color: ",
                                [Function],
                                ";
  color: ",
                                [Function],
                                ";
  height: 42px;
  display: flex;
  justify-content: center;
  align-items: center;
  flex: 0 0 33.33%;

  border-bottom-right-radius: ",
                                [Function],
                                ";
  border-bottom-left-radius: ",
                                [Function],
                                ";
",
                              ],
                            },
                            "displayName": "styled.div",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-bxivhb",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        hoverColor="#d3d3d330"
                        index={6}
                        onClick={[Function]}
                        primaryColor="green"
                        secondaryColor="red"
                        selected={false}
                      >
                        <div
                          className="c9"
                          onClick={[Function]}
                          selected={false}
                        >
                          Jul
                        </div>
                      </StyledComponent>
                    </styled.div>
                    <styled.div
                      hoverColor="#d3d3d330"
                      index={7}
                      key="Aug"
                      onClick={[Function]}
                      primaryColor="green"
                      secondaryColor="red"
                      selected={false}
                    >
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-bxivhb",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "
  ",
                                [Function],
                                "

  &:focus {
    outline: none;
  }

  ",
                                [Function],
                                ";

  padding: 12px 0;
  transition: background-color .1s, color .1s;
  font-size: 14px;
  background-color: ",
                                [Function],
                                ";
  color: ",
                                [Function],
                                ";
  height: 42px;
  display: flex;
  justify-content: center;
  align-items: center;
  flex: 0 0 33.33%;

  border-bottom-right-radius: ",
                                [Function],
                                ";
  border-bottom-left-radius: ",
                                [Function],
                                ";
",
                              ],
                            },
                            "displayName": "styled.div",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-bxivhb",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        hoverColor="#d3d3d330"
                        index={7}
                        onClick={[Function]}
                        primaryColor="green"
                        secondaryColor="red"
                        selected={false}
                      >
                        <div
                          className="c9"
                          onClick={[Function]}
                          selected={false}
                        >
                          Aug
                        </div>
                      </StyledComponent>
                    </styled.div>
                    <styled.div
                      hoverColor="#d3d3d330"
                      index={8}
                      key="Sep"
                      onClick={[Function]}
                      primaryColor="green"
                      secondaryColor="red"
                      selected={false}
                    >
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-bxivhb",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "
  ",
                                [Function],
                                "

  &:focus {
    outline: none;
  }

  ",
                                [Function],
                                ";

  padding: 12px 0;
  transition: background-color .1s, color .1s;
  font-size: 14px;
  background-color: ",
                                [Function],
                                ";
  color: ",
                                [Function],
                                ";
  height: 42px;
  display: flex;
  justify-content: center;
  align-items: center;
  flex: 0 0 33.33%;

  border-bottom-right-radius: ",
                                [Function],
                                ";
  border-bottom-left-radius: ",
                                [Function],
                                ";
",
                              ],
                            },
                            "displayName": "styled.div",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-bxivhb",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        hoverColor="#d3d3d330"
                        index={8}
                        onClick={[Function]}
                        primaryColor="green"
                        secondaryColor="red"
                        selected={false}
                      >
                        <div
                          className="c9"
                          onClick={[Function]}
                          selected={false}
                        >
                          Sep
                        </div>
                      </StyledComponent>
                    </styled.div>
                    <styled.div
                      hoverColor="#d3d3d330"
                      index={9}
                      key="Okt"
                      onClick={[Function]}
                      primaryColor="green"
                      secondaryColor="red"
                      selected={false}
                    >
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-bxivhb",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "
  ",
                                [Function],
                                "

  &:focus {
    outline: none;
  }

  ",
                                [Function],
                                ";

  padding: 12px 0;
  transition: background-color .1s, color .1s;
  font-size: 14px;
  background-color: ",
                                [Function],
                                ";
  color: ",
                                [Function],
                                ";
  height: 42px;
  display: flex;
  justify-content: center;
  align-items: center;
  flex: 0 0 33.33%;

  border-bottom-right-radius: ",
                                [Function],
                                ";
  border-bottom-left-radius: ",
                                [Function],
                                ";
",
                              ],
                            },
                            "displayName": "styled.div",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-bxivhb",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        hoverColor="#d3d3d330"
                        index={9}
                        onClick={[Function]}
                        primaryColor="green"
                        secondaryColor="red"
                        selected={false}
                      >
                        <div
                          className="c10"
                          onClick={[Function]}
                          selected={false}
                        >
                          Okt
                        </div>
                      </StyledComponent>
                    </styled.div>
                    <styled.div
                      hoverColor="#d3d3d330"
                      index={10}
                      key="Nov"
                      onClick={[Function]}
                      primaryColor="green"
                      secondaryColor="red"
                      selected={false}
                    >
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-bxivhb",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "
  ",
                                [Function],
                                "

  &:focus {
    outline: none;
  }

  ",
                                [Function],
                                ";

  padding: 12px 0;
  transition: background-color .1s, color .1s;
  font-size: 14px;
  background-color: ",
                                [Function],
                                ";
  color: ",
                                [Function],
                                ";
  height: 42px;
  display: flex;
  justify-content: center;
  align-items: center;
  flex: 0 0 33.33%;

  border-bottom-right-radius: ",
                                [Function],
                                ";
  border-bottom-left-radius: ",
                                [Function],
                                ";
",
                              ],
                            },
                            "displayName": "styled.div",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-bxivhb",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        hoverColor="#d3d3d330"
                        index={10}
                        onClick={[Function]}
                        primaryColor="green"
                        secondaryColor="red"
                        selected={false}
                      >
                        <div
                          className="c9"
                          onClick={[Function]}
                          selected={false}
                        >
                          Nov
                        </div>
                      </StyledComponent>
                    </styled.div>
                    <styled.div
                      hoverColor="#d3d3d330"
                      index={11}
                      key="Dez"
                      onClick={[Function]}
                      primaryColor="green"
                      secondaryColor="red"
                      selected={false}
                    >
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-bxivhb",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "
  ",
                                [Function],
                                "

  &:focus {
    outline: none;
  }

  ",
                                [Function],
                                ";

  padding: 12px 0;
  transition: background-color .1s, color .1s;
  font-size: 14px;
  background-color: ",
                                [Function],
                                ";
  color: ",
                                [Function],
                                ";
  height: 42px;
  display: flex;
  justify-content: center;
  align-items: center;
  flex: 0 0 33.33%;

  border-bottom-right-radius: ",
                                [Function],
                                ";
  border-bottom-left-radius: ",
                                [Function],
                                ";
",
                              ],
                            },
                            "displayName": "styled.div",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-bxivhb",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        hoverColor="#d3d3d330"
                        index={11}
                        onClick={[Function]}
                        primaryColor="green"
                        secondaryColor="red"
                        selected={false}
                      >
                        <div
                          className="c11"
                          onClick={[Function]}
                          selected={false}
                        >
                          Dez
                        </div>
                      </StyledComponent>
                    </styled.div>
                  </div>
                </StyledComponent>
              </styled.div>
            </div>
          </StyledComponent>
        </styled.div>
      </div>
    </StyledComponent>
  </styled.div>
</MonthPicker>
`;

exports[`<Monthpicker /> event handling:  closes the overlay when clicking anywhere outside the overlay 1`] = `
.c0 * {
  box-sizing: border-box;
}

.c0:focus {
  outline: none;
}

<MonthPicker
  hoverColor="#d3d3d330"
  locale="de"
  month={1}
  onChange={[MockFunction]}
  primaryColor="#27718c"
  secondaryColor="white"
  year={2010}
>
  <styled.div
    onKeyDown={[Function]}
    tabIndex={-1}
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bZQynM",
            "isStatic": true,
            "lastClassName": "c0",
            "rules": Array [
              "
  * {
    box-sizing: border-box;
  }

  &:focus {
    outline: none;
  }
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bZQynM",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={[Function]}
      onKeyDown={[Function]}
      tabIndex={-1}
    >
      <div
        className="c0"
        onKeyDown={[Function]}
        tabIndex={-1}
      >
        <div
          onClick={[Function]}
        >
          <div
            className="child"
          >
            Child
          </div>
        </div>
      </div>
    </StyledComponent>
  </styled.div>
</MonthPicker>
`;

exports[`<Monthpicker /> event handling:  opens the overlay when clicking on the child 1`] = `
.c5 {
  cursor: pointer;
  fill: white;
}

.c3 {
  cursor: pointer;
  fill: white;
  fill: white;
}

.c1 {
  margin-top: 8px;
  -webkit-transform-origin: top center;
  -ms-transform-origin: top center;
  transform-origin: top center;
  -webkit-animation: dXhcnZ .2s;
  animation: dXhcnZ .2s;
  position: absolute;
  box-shadow: 0 1px 3px #d3d3d380,0 1px 3px #d3d3d380;
  border: 1px solid #27718c;
  border-radius: 4px;
  z-index: 10;
}

.c8 {
  border: 1px solid #d3d3d37a;
  padding: 12px 0;
  -webkit-transition: background-color .1s,color .1s;
  transition: background-color .1s,color .1s;
  font-size: 14px;
  background-color: #27718c;
  color: white;
  height: 42px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-flex: 0 0 33.33%;
  -ms-flex: 0 0 33.33%;
  flex: 0 0 33.33%;
}

.c8:focus {
  outline: none;
}

.c9 {
  cursor: pointer;
  padding: 12px 0;
  -webkit-transition: background-color .1s,color .1s;
  transition: background-color .1s,color .1s;
  font-size: 14px;
  background-color: white;
  color: #27718c;
  height: 42px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-flex: 0 0 33.33%;
  -ms-flex: 0 0 33.33%;
  flex: 0 0 33.33%;
}

.c9:hover {
  background-color: #d3d3d330;
}

.c9:focus {
  outline: none;
}

.c10 {
  cursor: pointer;
  padding: 12px 0;
  -webkit-transition: background-color .1s,color .1s;
  transition: background-color .1s,color .1s;
  font-size: 14px;
  background-color: white;
  color: #27718c;
  height: 42px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-flex: 0 0 33.33%;
  -ms-flex: 0 0 33.33%;
  flex: 0 0 33.33%;
  border-bottom-left-radius: 4px;
}

.c10:hover {
  background-color: #d3d3d330;
}

.c10:focus {
  outline: none;
}

.c11 {
  cursor: pointer;
  padding: 12px 0;
  -webkit-transition: background-color .1s,color .1s;
  transition: background-color .1s,color .1s;
  font-size: 14px;
  background-color: white;
  color: #27718c;
  height: 42px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-flex: 0 0 33.33%;
  -ms-flex: 0 0 33.33%;
  flex: 0 0 33.33%;
  border-bottom-right-radius: 4px;
}

.c11:hover {
  background-color: #d3d3d330;
}

.c11:focus {
  outline: none;
}

.c2 {
  padding: 16px 8px;
  font-weight: bold;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: #27718c;
  color: white;
  border-top-left-radius: 4px;
  border-top-right-radius: 4px;
}

.c4 {
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.c0 * {
  box-sizing: border-box;
}

.c0:focus {
  outline: none;
}

.c7 {
  background-color: white;
  border-radius: 4px;
  width: 300px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.c6 {
  height: 8px;
  background-color: white;
  width: 100%;
}

<MonthPicker
  hoverColor="#d3d3d330"
  locale="de"
  month={1}
  onChange={[MockFunction]}
  primaryColor="#27718c"
  secondaryColor="white"
  year={2010}
>
  <styled.div
    onKeyDown={[Function]}
    tabIndex={-1}
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bZQynM",
            "isStatic": true,
            "lastClassName": "c0",
            "rules": Array [
              "
  * {
    box-sizing: border-box;
  }

  &:focus {
    outline: none;
  }
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bZQynM",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={[Function]}
      onKeyDown={[Function]}
      tabIndex={-1}
    >
      <div
        className="c0"
        onKeyDown={[Function]}
        tabIndex={-1}
      >
        <div
          onClick={[Function]}
        >
          <div
            className="child"
          >
            Child
          </div>
        </div>
        <styled.div
          hoverColor="#d3d3d330"
          primaryColor="#27718c"
          secondaryColor="white"
        >
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-htpNat",
                  "isStatic": false,
                  "lastClassName": "c1",
                  "rules": Array [
                    "
  margin-top: 8px;
  transform-origin: top center;
  animation: ",
                    Keyframes {
                      "id": "sc-keyframes-dXhcnZ",
                      "inject": [Function],
                      "name": "dXhcnZ",
                      "rules": Array [
                        "@-webkit-keyframes dXhcnZ{from{-webkit-transform:scaleY(0.95);-ms-transform:scaleY(0.95);transform:scaleY(0.95);opacity:0;}to{-webkit-transform:scaleY(1);-ms-transform:scaleY(1);transform:scaleY(1);opacity:1;}}",
                        "@keyframes dXhcnZ{from{-webkit-transform:scaleY(0.95);-ms-transform:scaleY(0.95);transform:scaleY(0.95);opacity:0;}to{-webkit-transform:scaleY(1);-ms-transform:scaleY(1);transform:scaleY(1);opacity:1;}}",
                      ],
                      "toString": [Function],
                    },
                    " .2s;
  position: absolute;
  box-shadow: 0 1px 3px #d3d3d380, 0 1px 3px #d3d3d380;
  border: 1px solid ",
                    [Function],
                    ";
  border-radius: 4px;
  z-index: 10;
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-htpNat",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            hoverColor="#d3d3d330"
            primaryColor="#27718c"
            secondaryColor="white"
          >
            <div
              className="c1"
            >
              <styled.div
                hoverColor="#d3d3d330"
                primaryColor="#27718c"
                secondaryColor="white"
              >
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-ifAKCX",
                        "isStatic": false,
                        "lastClassName": "c2",
                        "rules": Array [
                          "
  padding: 16px 8px;
  font-weight: bold;
  display: flex;
  justify-content: space-between;
  align-items: center;
  background-color: ",
                          [Function],
                          ";
  color: ",
                          [Function],
                          ";
  border-top-left-radius: 4px;
  border-top-right-radius: 4px;
",
                        ],
                      },
                      "displayName": "styled.div",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-ifAKCX",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  hoverColor="#d3d3d330"
                  primaryColor="#27718c"
                  secondaryColor="white"
                >
                  <div
                    className="c2"
                  >
                    <_default
                      hoverColor="#d3d3d330"
                      onClick={[Function]}
                      primaryColor="#27718c"
                      secondaryColor="white"
                    >
                      <styled.svg
                        height="24"
                        hoverColor="#d3d3d330"
                        onClick={[Function]}
                        primaryColor="#27718c"
                        secondaryColor="white"
                        viewBox="0 0 24 24"
                        width="24"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-bwzfXH",
                                "isStatic": false,
                                "lastClassName": "c3",
                                "rules": Array [
                                  "
  cursor: pointer;
  fill: white;
  fill: ",
                                  [Function],
                                  ";
",
                                ],
                              },
                              "displayName": "styled.svg",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-bwzfXH",
                              "target": "svg",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          height="24"
                          hoverColor="#d3d3d330"
                          onClick={[Function]}
                          primaryColor="#27718c"
                          secondaryColor="white"
                          viewBox="0 0 24 24"
                          width="24"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <svg
                            className="c3"
                            height="24"
                            onClick={[Function]}
                            viewBox="0 0 24 24"
                            width="24"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z"
                            />
                            <path
                              d="M0-.5h24v24H0z"
                              fill="none"
                            />
                          </svg>
                        </StyledComponent>
                      </styled.svg>
                    </_default>
                    <styled.span>
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-EHOje",
                              "isStatic": true,
                              "lastClassName": "c4",
                              "rules": Array [
                                "
  user-select: none;
",
                              ],
                            },
                            "displayName": "styled.span",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-EHOje",
                            "target": "span",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <span
                          className="c4"
                        >
                          2010
                        </span>
                      </StyledComponent>
                    </styled.span>
                    <_default
                      hoverColor="#d3d3d330"
                      onClick={[Function]}
                      primaryColor="#27718c"
                      secondaryColor="white"
                    >
                      <styled.svg
                        height="24"
                        hoverColor="#d3d3d330"
                        onClick={[Function]}
                        primaryColor="#27718c"
                        secondaryColor="white"
                        viewBox="0 0 24 24"
                        width="24"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-bdVaJa",
                                "isStatic": false,
                                "lastClassName": "c5",
                                "rules": Array [
                                  "
  cursor: pointer;
  fill: ",
                                  [Function],
                                  ";
",
                                ],
                              },
                              "displayName": "styled.svg",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-bdVaJa",
                              "target": "svg",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          height="24"
                          hoverColor="#d3d3d330"
                          onClick={[Function]}
                          primaryColor="#27718c"
                          secondaryColor="white"
                          viewBox="0 0 24 24"
                          width="24"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <svg
                            className="c5"
                            height="24"
                            onClick={[Function]}
                            viewBox="0 0 24 24"
                            width="24"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"
                            />
                            <path
                              d="M0-.25h24v24H0z"
                              fill="none"
                            />
                          </svg>
                        </StyledComponent>
                      </styled.svg>
                    </_default>
                  </div>
                </StyledComponent>
              </styled.div>
              <styled.div
                hoverColor="#d3d3d330"
                primaryColor="#27718c"
                secondaryColor="white"
              >
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-htoDjs",
                        "isStatic": false,
                        "lastClassName": "c6",
                        "rules": Array [
                          "
  height: 8px;
  background-color: ",
                          [Function],
                          ";
  width: 100%;
",
                        ],
                      },
                      "displayName": "styled.div",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-htoDjs",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  hoverColor="#d3d3d330"
                  primaryColor="#27718c"
                  secondaryColor="white"
                >
                  <div
                    className="c6"
                  />
                </StyledComponent>
              </styled.div>
              <styled.div
                hoverColor="#d3d3d330"
                primaryColor="#27718c"
                secondaryColor="white"
              >
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-gzVnrw",
                        "isStatic": false,
                        "lastClassName": "c7",
                        "rules": Array [
                          "
  background-color: ",
                          [Function],
                          ";
  border-radius: 4px;
  width: 300px;
  display: flex;
  flex-wrap: wrap;
",
                        ],
                      },
                      "displayName": "styled.div",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-gzVnrw",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  hoverColor="#d3d3d330"
                  primaryColor="#27718c"
                  secondaryColor="white"
                >
                  <div
                    className="c7"
                  >
                    <styled.div
                      hoverColor="#d3d3d330"
                      index={0}
                      key="Jan"
                      onClick={[Function]}
                      primaryColor="#27718c"
                      secondaryColor="white"
                      selected={true}
                    >
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-bxivhb",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "
  ",
                                [Function],
                                "

  &:focus {
    outline: none;
  }

  ",
                                [Function],
                                ";

  padding: 12px 0;
  transition: background-color .1s, color .1s;
  font-size: 14px;
  background-color: ",
                                [Function],
                                ";
  color: ",
                                [Function],
                                ";
  height: 42px;
  display: flex;
  justify-content: center;
  align-items: center;
  flex: 0 0 33.33%;

  border-bottom-right-radius: ",
                                [Function],
                                ";
  border-bottom-left-radius: ",
                                [Function],
                                ";
",
                              ],
                            },
                            "displayName": "styled.div",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-bxivhb",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        hoverColor="#d3d3d330"
                        index={0}
                        onClick={[Function]}
                        primaryColor="#27718c"
                        secondaryColor="white"
                        selected={true}
                      >
                        <div
                          className="c8"
                          onClick={[Function]}
                          selected={true}
                        >
                          Jan
                        </div>
                      </StyledComponent>
                    </styled.div>
                    <styled.div
                      hoverColor="#d3d3d330"
                      index={1}
                      key="Feb"
                      onClick={[Function]}
                      primaryColor="#27718c"
                      secondaryColor="white"
                      selected={false}
                    >
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-bxivhb",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "
  ",
                                [Function],
                                "

  &:focus {
    outline: none;
  }

  ",
                                [Function],
                                ";

  padding: 12px 0;
  transition: background-color .1s, color .1s;
  font-size: 14px;
  background-color: ",
                                [Function],
                                ";
  color: ",
                                [Function],
                                ";
  height: 42px;
  display: flex;
  justify-content: center;
  align-items: center;
  flex: 0 0 33.33%;

  border-bottom-right-radius: ",
                                [Function],
                                ";
  border-bottom-left-radius: ",
                                [Function],
                                ";
",
                              ],
                            },
                            "displayName": "styled.div",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-bxivhb",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        hoverColor="#d3d3d330"
                        index={1}
                        onClick={[Function]}
                        primaryColor="#27718c"
                        secondaryColor="white"
                        selected={false}
                      >
                        <div
                          className="c9"
                          onClick={[Function]}
                          selected={false}
                        >
                          Feb
                        </div>
                      </StyledComponent>
                    </styled.div>
                    <styled.div
                      hoverColor="#d3d3d330"
                      index={2}
                      key="Mär"
                      onClick={[Function]}
                      primaryColor="#27718c"
                      secondaryColor="white"
                      selected={false}
                    >
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-bxivhb",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "
  ",
                                [Function],
                                "

  &:focus {
    outline: none;
  }

  ",
                                [Function],
                                ";

  padding: 12px 0;
  transition: background-color .1s, color .1s;
  font-size: 14px;
  background-color: ",
                                [Function],
                                ";
  color: ",
                                [Function],
                                ";
  height: 42px;
  display: flex;
  justify-content: center;
  align-items: center;
  flex: 0 0 33.33%;

  border-bottom-right-radius: ",
                                [Function],
                                ";
  border-bottom-left-radius: ",
                                [Function],
                                ";
",
                              ],
                            },
                            "displayName": "styled.div",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-bxivhb",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        hoverColor="#d3d3d330"
                        index={2}
                        onClick={[Function]}
                        primaryColor="#27718c"
                        secondaryColor="white"
                        selected={false}
                      >
                        <div
                          className="c9"
                          onClick={[Function]}
                          selected={false}
                        >
                          Mär
                        </div>
                      </StyledComponent>
                    </styled.div>
                    <styled.div
                      hoverColor="#d3d3d330"
                      index={3}
                      key="Apr"
                      onClick={[Function]}
                      primaryColor="#27718c"
                      secondaryColor="white"
                      selected={false}
                    >
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-bxivhb",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "
  ",
                                [Function],
                                "

  &:focus {
    outline: none;
  }

  ",
                                [Function],
                                ";

  padding: 12px 0;
  transition: background-color .1s, color .1s;
  font-size: 14px;
  background-color: ",
                                [Function],
                                ";
  color: ",
                                [Function],
                                ";
  height: 42px;
  display: flex;
  justify-content: center;
  align-items: center;
  flex: 0 0 33.33%;

  border-bottom-right-radius: ",
                                [Function],
                                ";
  border-bottom-left-radius: ",
                                [Function],
                                ";
",
                              ],
                            },
                            "displayName": "styled.div",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-bxivhb",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        hoverColor="#d3d3d330"
                        index={3}
                        onClick={[Function]}
                        primaryColor="#27718c"
                        secondaryColor="white"
                        selected={false}
                      >
                        <div
                          className="c9"
                          onClick={[Function]}
                          selected={false}
                        >
                          Apr
                        </div>
                      </StyledComponent>
                    </styled.div>
                    <styled.div
                      hoverColor="#d3d3d330"
                      index={4}
                      key="Mai"
                      onClick={[Function]}
                      primaryColor="#27718c"
                      secondaryColor="white"
                      selected={false}
                    >
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-bxivhb",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "
  ",
                                [Function],
                                "

  &:focus {
    outline: none;
  }

  ",
                                [Function],
                                ";

  padding: 12px 0;
  transition: background-color .1s, color .1s;
  font-size: 14px;
  background-color: ",
                                [Function],
                                ";
  color: ",
                                [Function],
                                ";
  height: 42px;
  display: flex;
  justify-content: center;
  align-items: center;
  flex: 0 0 33.33%;

  border-bottom-right-radius: ",
                                [Function],
                                ";
  border-bottom-left-radius: ",
                                [Function],
                                ";
",
                              ],
                            },
                            "displayName": "styled.div",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-bxivhb",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        hoverColor="#d3d3d330"
                        index={4}
                        onClick={[Function]}
                        primaryColor="#27718c"
                        secondaryColor="white"
                        selected={false}
                      >
                        <div
                          className="c9"
                          onClick={[Function]}
                          selected={false}
                        >
                          Mai
                        </div>
                      </StyledComponent>
                    </styled.div>
                    <styled.div
                      hoverColor="#d3d3d330"
                      index={5}
                      key="Jun"
                      onClick={[Function]}
                      primaryColor="#27718c"
                      secondaryColor="white"
                      selected={false}
                    >
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-bxivhb",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "
  ",
                                [Function],
                                "

  &:focus {
    outline: none;
  }

  ",
                                [Function],
                                ";

  padding: 12px 0;
  transition: background-color .1s, color .1s;
  font-size: 14px;
  background-color: ",
                                [Function],
                                ";
  color: ",
                                [Function],
                                ";
  height: 42px;
  display: flex;
  justify-content: center;
  align-items: center;
  flex: 0 0 33.33%;

  border-bottom-right-radius: ",
                                [Function],
                                ";
  border-bottom-left-radius: ",
                                [Function],
                                ";
",
                              ],
                            },
                            "displayName": "styled.div",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-bxivhb",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        hoverColor="#d3d3d330"
                        index={5}
                        onClick={[Function]}
                        primaryColor="#27718c"
                        secondaryColor="white"
                        selected={false}
                      >
                        <div
                          className="c9"
                          onClick={[Function]}
                          selected={false}
                        >
                          Jun
                        </div>
                      </StyledComponent>
                    </styled.div>
                    <styled.div
                      hoverColor="#d3d3d330"
                      index={6}
                      key="Jul"
                      onClick={[Function]}
                      primaryColor="#27718c"
                      secondaryColor="white"
                      selected={false}
                    >
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-bxivhb",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "
  ",
                                [Function],
                                "

  &:focus {
    outline: none;
  }

  ",
                                [Function],
                                ";

  padding: 12px 0;
  transition: background-color .1s, color .1s;
  font-size: 14px;
  background-color: ",
                                [Function],
                                ";
  color: ",
                                [Function],
                                ";
  height: 42px;
  display: flex;
  justify-content: center;
  align-items: center;
  flex: 0 0 33.33%;

  border-bottom-right-radius: ",
                                [Function],
                                ";
  border-bottom-left-radius: ",
                                [Function],
                                ";
",
                              ],
                            },
                            "displayName": "styled.div",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-bxivhb",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        hoverColor="#d3d3d330"
                        index={6}
                        onClick={[Function]}
                        primaryColor="#27718c"
                        secondaryColor="white"
                        selected={false}
                      >
                        <div
                          className="c9"
                          onClick={[Function]}
                          selected={false}
                        >
                          Jul
                        </div>
                      </StyledComponent>
                    </styled.div>
                    <styled.div
                      hoverColor="#d3d3d330"
                      index={7}
                      key="Aug"
                      onClick={[Function]}
                      primaryColor="#27718c"
                      secondaryColor="white"
                      selected={false}
                    >
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-bxivhb",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "
  ",
                                [Function],
                                "

  &:focus {
    outline: none;
  }

  ",
                                [Function],
                                ";

  padding: 12px 0;
  transition: background-color .1s, color .1s;
  font-size: 14px;
  background-color: ",
                                [Function],
                                ";
  color: ",
                                [Function],
                                ";
  height: 42px;
  display: flex;
  justify-content: center;
  align-items: center;
  flex: 0 0 33.33%;

  border-bottom-right-radius: ",
                                [Function],
                                ";
  border-bottom-left-radius: ",
                                [Function],
                                ";
",
                              ],
                            },
                            "displayName": "styled.div",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-bxivhb",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        hoverColor="#d3d3d330"
                        index={7}
                        onClick={[Function]}
                        primaryColor="#27718c"
                        secondaryColor="white"
                        selected={false}
                      >
                        <div
                          className="c9"
                          onClick={[Function]}
                          selected={false}
                        >
                          Aug
                        </div>
                      </StyledComponent>
                    </styled.div>
                    <styled.div
                      hoverColor="#d3d3d330"
                      index={8}
                      key="Sep"
                      onClick={[Function]}
                      primaryColor="#27718c"
                      secondaryColor="white"
                      selected={false}
                    >
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-bxivhb",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "
  ",
                                [Function],
                                "

  &:focus {
    outline: none;
  }

  ",
                                [Function],
                                ";

  padding: 12px 0;
  transition: background-color .1s, color .1s;
  font-size: 14px;
  background-color: ",
                                [Function],
                                ";
  color: ",
                                [Function],
                                ";
  height: 42px;
  display: flex;
  justify-content: center;
  align-items: center;
  flex: 0 0 33.33%;

  border-bottom-right-radius: ",
                                [Function],
                                ";
  border-bottom-left-radius: ",
                                [Function],
                                ";
",
                              ],
                            },
                            "displayName": "styled.div",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-bxivhb",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        hoverColor="#d3d3d330"
                        index={8}
                        onClick={[Function]}
                        primaryColor="#27718c"
                        secondaryColor="white"
                        selected={false}
                      >
                        <div
                          className="c9"
                          onClick={[Function]}
                          selected={false}
                        >
                          Sep
                        </div>
                      </StyledComponent>
                    </styled.div>
                    <styled.div
                      hoverColor="#d3d3d330"
                      index={9}
                      key="Okt"
                      onClick={[Function]}
                      primaryColor="#27718c"
                      secondaryColor="white"
                      selected={false}
                    >
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-bxivhb",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "
  ",
                                [Function],
                                "

  &:focus {
    outline: none;
  }

  ",
                                [Function],
                                ";

  padding: 12px 0;
  transition: background-color .1s, color .1s;
  font-size: 14px;
  background-color: ",
                                [Function],
                                ";
  color: ",
                                [Function],
                                ";
  height: 42px;
  display: flex;
  justify-content: center;
  align-items: center;
  flex: 0 0 33.33%;

  border-bottom-right-radius: ",
                                [Function],
                                ";
  border-bottom-left-radius: ",
                                [Function],
                                ";
",
                              ],
                            },
                            "displayName": "styled.div",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-bxivhb",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        hoverColor="#d3d3d330"
                        index={9}
                        onClick={[Function]}
                        primaryColor="#27718c"
                        secondaryColor="white"
                        selected={false}
                      >
                        <div
                          className="c10"
                          onClick={[Function]}
                          selected={false}
                        >
                          Okt
                        </div>
                      </StyledComponent>
                    </styled.div>
                    <styled.div
                      hoverColor="#d3d3d330"
                      index={10}
                      key="Nov"
                      onClick={[Function]}
                      primaryColor="#27718c"
                      secondaryColor="white"
                      selected={false}
                    >
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-bxivhb",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "
  ",
                                [Function],
                                "

  &:focus {
    outline: none;
  }

  ",
                                [Function],
                                ";

  padding: 12px 0;
  transition: background-color .1s, color .1s;
  font-size: 14px;
  background-color: ",
                                [Function],
                                ";
  color: ",
                                [Function],
                                ";
  height: 42px;
  display: flex;
  justify-content: center;
  align-items: center;
  flex: 0 0 33.33%;

  border-bottom-right-radius: ",
                                [Function],
                                ";
  border-bottom-left-radius: ",
                                [Function],
                                ";
",
                              ],
                            },
                            "displayName": "styled.div",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-bxivhb",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        hoverColor="#d3d3d330"
                        index={10}
                        onClick={[Function]}
                        primaryColor="#27718c"
                        secondaryColor="white"
                        selected={false}
                      >
                        <div
                          className="c9"
                          onClick={[Function]}
                          selected={false}
                        >
                          Nov
                        </div>
                      </StyledComponent>
                    </styled.div>
                    <styled.div
                      hoverColor="#d3d3d330"
                      index={11}
                      key="Dez"
                      onClick={[Function]}
                      primaryColor="#27718c"
                      secondaryColor="white"
                      selected={false}
                    >
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-bxivhb",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "
  ",
                                [Function],
                                "

  &:focus {
    outline: none;
  }

  ",
                                [Function],
                                ";

  padding: 12px 0;
  transition: background-color .1s, color .1s;
  font-size: 14px;
  background-color: ",
                                [Function],
                                ";
  color: ",
                                [Function],
                                ";
  height: 42px;
  display: flex;
  justify-content: center;
  align-items: center;
  flex: 0 0 33.33%;

  border-bottom-right-radius: ",
                                [Function],
                                ";
  border-bottom-left-radius: ",
                                [Function],
                                ";
",
                              ],
                            },
                            "displayName": "styled.div",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-bxivhb",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        hoverColor="#d3d3d330"
                        index={11}
                        onClick={[Function]}
                        primaryColor="#27718c"
                        secondaryColor="white"
                        selected={false}
                      >
                        <div
                          className="c11"
                          onClick={[Function]}
                          selected={false}
                        >
                          Dez
                        </div>
                      </StyledComponent>
                    </styled.div>
                  </div>
                </StyledComponent>
              </styled.div>
            </div>
          </StyledComponent>
        </styled.div>
      </div>
    </StyledComponent>
  </styled.div>
</MonthPicker>
`;

exports[`<Monthpicker /> renders its children 1`] = `
<styled.div
  onKeyDown={[Function]}
  tabIndex={-1}
>
  <div
    onClick={[Function]}
  >
    Child
  </div>
</styled.div>
`;

exports[`<Monthpicker /> works with different locales 1`] = `
.c5 {
  cursor: pointer;
  fill: white;
}

.c3 {
  cursor: pointer;
  fill: white;
  fill: white;
}

.c1 {
  margin-top: 8px;
  -webkit-transform-origin: top center;
  -ms-transform-origin: top center;
  transform-origin: top center;
  -webkit-animation: dXhcnZ .2s;
  animation: dXhcnZ .2s;
  position: absolute;
  box-shadow: 0 1px 3px #d3d3d380,0 1px 3px #d3d3d380;
  border: 1px solid #27718c;
  border-radius: 4px;
  z-index: 10;
}

.c8 {
  border: 1px solid #d3d3d37a;
  padding: 12px 0;
  -webkit-transition: background-color .1s,color .1s;
  transition: background-color .1s,color .1s;
  font-size: 14px;
  background-color: #27718c;
  color: white;
  height: 42px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-flex: 0 0 33.33%;
  -ms-flex: 0 0 33.33%;
  flex: 0 0 33.33%;
}

.c8:focus {
  outline: none;
}

.c9 {
  cursor: pointer;
  padding: 12px 0;
  -webkit-transition: background-color .1s,color .1s;
  transition: background-color .1s,color .1s;
  font-size: 14px;
  background-color: white;
  color: #27718c;
  height: 42px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-flex: 0 0 33.33%;
  -ms-flex: 0 0 33.33%;
  flex: 0 0 33.33%;
}

.c9:hover {
  background-color: #d3d3d330;
}

.c9:focus {
  outline: none;
}

.c10 {
  cursor: pointer;
  padding: 12px 0;
  -webkit-transition: background-color .1s,color .1s;
  transition: background-color .1s,color .1s;
  font-size: 14px;
  background-color: white;
  color: #27718c;
  height: 42px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-flex: 0 0 33.33%;
  -ms-flex: 0 0 33.33%;
  flex: 0 0 33.33%;
  border-bottom-left-radius: 4px;
}

.c10:hover {
  background-color: #d3d3d330;
}

.c10:focus {
  outline: none;
}

.c11 {
  cursor: pointer;
  padding: 12px 0;
  -webkit-transition: background-color .1s,color .1s;
  transition: background-color .1s,color .1s;
  font-size: 14px;
  background-color: white;
  color: #27718c;
  height: 42px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-flex: 0 0 33.33%;
  -ms-flex: 0 0 33.33%;
  flex: 0 0 33.33%;
  border-bottom-right-radius: 4px;
}

.c11:hover {
  background-color: #d3d3d330;
}

.c11:focus {
  outline: none;
}

.c2 {
  padding: 16px 8px;
  font-weight: bold;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: #27718c;
  color: white;
  border-top-left-radius: 4px;
  border-top-right-radius: 4px;
}

.c4 {
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.c0 * {
  box-sizing: border-box;
}

.c0:focus {
  outline: none;
}

.c7 {
  background-color: white;
  border-radius: 4px;
  width: 300px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.c6 {
  height: 8px;
  background-color: white;
  width: 100%;
}

<MonthPicker
  hoverColor="#d3d3d330"
  locale="en"
  month={1}
  onChange={[MockFunction]}
  primaryColor="#27718c"
  secondaryColor="white"
  year={2018}
>
  <styled.div
    onKeyDown={[Function]}
    tabIndex={-1}
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bZQynM",
            "isStatic": true,
            "lastClassName": "c0",
            "rules": Array [
              "
  * {
    box-sizing: border-box;
  }

  &:focus {
    outline: none;
  }
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bZQynM",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={[Function]}
      onKeyDown={[Function]}
      tabIndex={-1}
    >
      <div
        className="c0"
        onKeyDown={[Function]}
        tabIndex={-1}
      >
        <div
          onClick={[Function]}
        >
          <div
            className="child"
          >
            Child
          </div>
        </div>
        <styled.div
          hoverColor="#d3d3d330"
          primaryColor="#27718c"
          secondaryColor="white"
        >
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-htpNat",
                  "isStatic": false,
                  "lastClassName": "c1",
                  "rules": Array [
                    "
  margin-top: 8px;
  transform-origin: top center;
  animation: ",
                    Keyframes {
                      "id": "sc-keyframes-dXhcnZ",
                      "inject": [Function],
                      "name": "dXhcnZ",
                      "rules": Array [
                        "@-webkit-keyframes dXhcnZ{from{-webkit-transform:scaleY(0.95);-ms-transform:scaleY(0.95);transform:scaleY(0.95);opacity:0;}to{-webkit-transform:scaleY(1);-ms-transform:scaleY(1);transform:scaleY(1);opacity:1;}}",
                        "@keyframes dXhcnZ{from{-webkit-transform:scaleY(0.95);-ms-transform:scaleY(0.95);transform:scaleY(0.95);opacity:0;}to{-webkit-transform:scaleY(1);-ms-transform:scaleY(1);transform:scaleY(1);opacity:1;}}",
                      ],
                      "toString": [Function],
                    },
                    " .2s;
  position: absolute;
  box-shadow: 0 1px 3px #d3d3d380, 0 1px 3px #d3d3d380;
  border: 1px solid ",
                    [Function],
                    ";
  border-radius: 4px;
  z-index: 10;
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-htpNat",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            hoverColor="#d3d3d330"
            primaryColor="#27718c"
            secondaryColor="white"
          >
            <div
              className="c1"
            >
              <styled.div
                hoverColor="#d3d3d330"
                primaryColor="#27718c"
                secondaryColor="white"
              >
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-ifAKCX",
                        "isStatic": false,
                        "lastClassName": "c2",
                        "rules": Array [
                          "
  padding: 16px 8px;
  font-weight: bold;
  display: flex;
  justify-content: space-between;
  align-items: center;
  background-color: ",
                          [Function],
                          ";
  color: ",
                          [Function],
                          ";
  border-top-left-radius: 4px;
  border-top-right-radius: 4px;
",
                        ],
                      },
                      "displayName": "styled.div",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-ifAKCX",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  hoverColor="#d3d3d330"
                  primaryColor="#27718c"
                  secondaryColor="white"
                >
                  <div
                    className="c2"
                  >
                    <_default
                      hoverColor="#d3d3d330"
                      onClick={[Function]}
                      primaryColor="#27718c"
                      secondaryColor="white"
                    >
                      <styled.svg
                        height="24"
                        hoverColor="#d3d3d330"
                        onClick={[Function]}
                        primaryColor="#27718c"
                        secondaryColor="white"
                        viewBox="0 0 24 24"
                        width="24"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-bwzfXH",
                                "isStatic": false,
                                "lastClassName": "c3",
                                "rules": Array [
                                  "
  cursor: pointer;
  fill: white;
  fill: ",
                                  [Function],
                                  ";
",
                                ],
                              },
                              "displayName": "styled.svg",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-bwzfXH",
                              "target": "svg",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          height="24"
                          hoverColor="#d3d3d330"
                          onClick={[Function]}
                          primaryColor="#27718c"
                          secondaryColor="white"
                          viewBox="0 0 24 24"
                          width="24"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <svg
                            className="c3"
                            height="24"
                            onClick={[Function]}
                            viewBox="0 0 24 24"
                            width="24"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z"
                            />
                            <path
                              d="M0-.5h24v24H0z"
                              fill="none"
                            />
                          </svg>
                        </StyledComponent>
                      </styled.svg>
                    </_default>
                    <styled.span>
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-EHOje",
                              "isStatic": true,
                              "lastClassName": "c4",
                              "rules": Array [
                                "
  user-select: none;
",
                              ],
                            },
                            "displayName": "styled.span",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-EHOje",
                            "target": "span",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <span
                          className="c4"
                        >
                          2018
                        </span>
                      </StyledComponent>
                    </styled.span>
                    <_default
                      hoverColor="#d3d3d330"
                      onClick={[Function]}
                      primaryColor="#27718c"
                      secondaryColor="white"
                    >
                      <styled.svg
                        height="24"
                        hoverColor="#d3d3d330"
                        onClick={[Function]}
                        primaryColor="#27718c"
                        secondaryColor="white"
                        viewBox="0 0 24 24"
                        width="24"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-bdVaJa",
                                "isStatic": false,
                                "lastClassName": "c5",
                                "rules": Array [
                                  "
  cursor: pointer;
  fill: ",
                                  [Function],
                                  ";
",
                                ],
                              },
                              "displayName": "styled.svg",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-bdVaJa",
                              "target": "svg",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          height="24"
                          hoverColor="#d3d3d330"
                          onClick={[Function]}
                          primaryColor="#27718c"
                          secondaryColor="white"
                          viewBox="0 0 24 24"
                          width="24"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <svg
                            className="c5"
                            height="24"
                            onClick={[Function]}
                            viewBox="0 0 24 24"
                            width="24"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"
                            />
                            <path
                              d="M0-.25h24v24H0z"
                              fill="none"
                            />
                          </svg>
                        </StyledComponent>
                      </styled.svg>
                    </_default>
                  </div>
                </StyledComponent>
              </styled.div>
              <styled.div
                hoverColor="#d3d3d330"
                primaryColor="#27718c"
                secondaryColor="white"
              >
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-htoDjs",
                        "isStatic": false,
                        "lastClassName": "c6",
                        "rules": Array [
                          "
  height: 8px;
  background-color: ",
                          [Function],
                          ";
  width: 100%;
",
                        ],
                      },
                      "displayName": "styled.div",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-htoDjs",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  hoverColor="#d3d3d330"
                  primaryColor="#27718c"
                  secondaryColor="white"
                >
                  <div
                    className="c6"
                  />
                </StyledComponent>
              </styled.div>
              <styled.div
                hoverColor="#d3d3d330"
                primaryColor="#27718c"
                secondaryColor="white"
              >
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-gzVnrw",
                        "isStatic": false,
                        "lastClassName": "c7",
                        "rules": Array [
                          "
  background-color: ",
                          [Function],
                          ";
  border-radius: 4px;
  width: 300px;
  display: flex;
  flex-wrap: wrap;
",
                        ],
                      },
                      "displayName": "styled.div",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-gzVnrw",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  hoverColor="#d3d3d330"
                  primaryColor="#27718c"
                  secondaryColor="white"
                >
                  <div
                    className="c7"
                  >
                    <styled.div
                      hoverColor="#d3d3d330"
                      index={0}
                      key="Jan"
                      onClick={[Function]}
                      primaryColor="#27718c"
                      secondaryColor="white"
                      selected={true}
                    >
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-bxivhb",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "
  ",
                                [Function],
                                "

  &:focus {
    outline: none;
  }

  ",
                                [Function],
                                ";

  padding: 12px 0;
  transition: background-color .1s, color .1s;
  font-size: 14px;
  background-color: ",
                                [Function],
                                ";
  color: ",
                                [Function],
                                ";
  height: 42px;
  display: flex;
  justify-content: center;
  align-items: center;
  flex: 0 0 33.33%;

  border-bottom-right-radius: ",
                                [Function],
                                ";
  border-bottom-left-radius: ",
                                [Function],
                                ";
",
                              ],
                            },
                            "displayName": "styled.div",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-bxivhb",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        hoverColor="#d3d3d330"
                        index={0}
                        onClick={[Function]}
                        primaryColor="#27718c"
                        secondaryColor="white"
                        selected={true}
                      >
                        <div
                          className="c8"
                          onClick={[Function]}
                          selected={true}
                        >
                          Jan
                        </div>
                      </StyledComponent>
                    </styled.div>
                    <styled.div
                      hoverColor="#d3d3d330"
                      index={1}
                      key="Feb"
                      onClick={[Function]}
                      primaryColor="#27718c"
                      secondaryColor="white"
                      selected={false}
                    >
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-bxivhb",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "
  ",
                                [Function],
                                "

  &:focus {
    outline: none;
  }

  ",
                                [Function],
                                ";

  padding: 12px 0;
  transition: background-color .1s, color .1s;
  font-size: 14px;
  background-color: ",
                                [Function],
                                ";
  color: ",
                                [Function],
                                ";
  height: 42px;
  display: flex;
  justify-content: center;
  align-items: center;
  flex: 0 0 33.33%;

  border-bottom-right-radius: ",
                                [Function],
                                ";
  border-bottom-left-radius: ",
                                [Function],
                                ";
",
                              ],
                            },
                            "displayName": "styled.div",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-bxivhb",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        hoverColor="#d3d3d330"
                        index={1}
                        onClick={[Function]}
                        primaryColor="#27718c"
                        secondaryColor="white"
                        selected={false}
                      >
                        <div
                          className="c9"
                          onClick={[Function]}
                          selected={false}
                        >
                          Feb
                        </div>
                      </StyledComponent>
                    </styled.div>
                    <styled.div
                      hoverColor="#d3d3d330"
                      index={2}
                      key="Mar"
                      onClick={[Function]}
                      primaryColor="#27718c"
                      secondaryColor="white"
                      selected={false}
                    >
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-bxivhb",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "
  ",
                                [Function],
                                "

  &:focus {
    outline: none;
  }

  ",
                                [Function],
                                ";

  padding: 12px 0;
  transition: background-color .1s, color .1s;
  font-size: 14px;
  background-color: ",
                                [Function],
                                ";
  color: ",
                                [Function],
                                ";
  height: 42px;
  display: flex;
  justify-content: center;
  align-items: center;
  flex: 0 0 33.33%;

  border-bottom-right-radius: ",
                                [Function],
                                ";
  border-bottom-left-radius: ",
                                [Function],
                                ";
",
                              ],
                            },
                            "displayName": "styled.div",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-bxivhb",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        hoverColor="#d3d3d330"
                        index={2}
                        onClick={[Function]}
                        primaryColor="#27718c"
                        secondaryColor="white"
                        selected={false}
                      >
                        <div
                          className="c9"
                          onClick={[Function]}
                          selected={false}
                        >
                          Mar
                        </div>
                      </StyledComponent>
                    </styled.div>
                    <styled.div
                      hoverColor="#d3d3d330"
                      index={3}
                      key="Apr"
                      onClick={[Function]}
                      primaryColor="#27718c"
                      secondaryColor="white"
                      selected={false}
                    >
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-bxivhb",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "
  ",
                                [Function],
                                "

  &:focus {
    outline: none;
  }

  ",
                                [Function],
                                ";

  padding: 12px 0;
  transition: background-color .1s, color .1s;
  font-size: 14px;
  background-color: ",
                                [Function],
                                ";
  color: ",
                                [Function],
                                ";
  height: 42px;
  display: flex;
  justify-content: center;
  align-items: center;
  flex: 0 0 33.33%;

  border-bottom-right-radius: ",
                                [Function],
                                ";
  border-bottom-left-radius: ",
                                [Function],
                                ";
",
                              ],
                            },
                            "displayName": "styled.div",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-bxivhb",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        hoverColor="#d3d3d330"
                        index={3}
                        onClick={[Function]}
                        primaryColor="#27718c"
                        secondaryColor="white"
                        selected={false}
                      >
                        <div
                          className="c9"
                          onClick={[Function]}
                          selected={false}
                        >
                          Apr
                        </div>
                      </StyledComponent>
                    </styled.div>
                    <styled.div
                      hoverColor="#d3d3d330"
                      index={4}
                      key="May"
                      onClick={[Function]}
                      primaryColor="#27718c"
                      secondaryColor="white"
                      selected={false}
                    >
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-bxivhb",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "
  ",
                                [Function],
                                "

  &:focus {
    outline: none;
  }

  ",
                                [Function],
                                ";

  padding: 12px 0;
  transition: background-color .1s, color .1s;
  font-size: 14px;
  background-color: ",
                                [Function],
                                ";
  color: ",
                                [Function],
                                ";
  height: 42px;
  display: flex;
  justify-content: center;
  align-items: center;
  flex: 0 0 33.33%;

  border-bottom-right-radius: ",
                                [Function],
                                ";
  border-bottom-left-radius: ",
                                [Function],
                                ";
",
                              ],
                            },
                            "displayName": "styled.div",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-bxivhb",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        hoverColor="#d3d3d330"
                        index={4}
                        onClick={[Function]}
                        primaryColor="#27718c"
                        secondaryColor="white"
                        selected={false}
                      >
                        <div
                          className="c9"
                          onClick={[Function]}
                          selected={false}
                        >
                          May
                        </div>
                      </StyledComponent>
                    </styled.div>
                    <styled.div
                      hoverColor="#d3d3d330"
                      index={5}
                      key="Jun"
                      onClick={[Function]}
                      primaryColor="#27718c"
                      secondaryColor="white"
                      selected={false}
                    >
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-bxivhb",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "
  ",
                                [Function],
                                "

  &:focus {
    outline: none;
  }

  ",
                                [Function],
                                ";

  padding: 12px 0;
  transition: background-color .1s, color .1s;
  font-size: 14px;
  background-color: ",
                                [Function],
                                ";
  color: ",
                                [Function],
                                ";
  height: 42px;
  display: flex;
  justify-content: center;
  align-items: center;
  flex: 0 0 33.33%;

  border-bottom-right-radius: ",
                                [Function],
                                ";
  border-bottom-left-radius: ",
                                [Function],
                                ";
",
                              ],
                            },
                            "displayName": "styled.div",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-bxivhb",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        hoverColor="#d3d3d330"
                        index={5}
                        onClick={[Function]}
                        primaryColor="#27718c"
                        secondaryColor="white"
                        selected={false}
                      >
                        <div
                          className="c9"
                          onClick={[Function]}
                          selected={false}
                        >
                          Jun
                        </div>
                      </StyledComponent>
                    </styled.div>
                    <styled.div
                      hoverColor="#d3d3d330"
                      index={6}
                      key="Jul"
                      onClick={[Function]}
                      primaryColor="#27718c"
                      secondaryColor="white"
                      selected={false}
                    >
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-bxivhb",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "
  ",
                                [Function],
                                "

  &:focus {
    outline: none;
  }

  ",
                                [Function],
                                ";

  padding: 12px 0;
  transition: background-color .1s, color .1s;
  font-size: 14px;
  background-color: ",
                                [Function],
                                ";
  color: ",
                                [Function],
                                ";
  height: 42px;
  display: flex;
  justify-content: center;
  align-items: center;
  flex: 0 0 33.33%;

  border-bottom-right-radius: ",
                                [Function],
                                ";
  border-bottom-left-radius: ",
                                [Function],
                                ";
",
                              ],
                            },
                            "displayName": "styled.div",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-bxivhb",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        hoverColor="#d3d3d330"
                        index={6}
                        onClick={[Function]}
                        primaryColor="#27718c"
                        secondaryColor="white"
                        selected={false}
                      >
                        <div
                          className="c9"
                          onClick={[Function]}
                          selected={false}
                        >
                          Jul
                        </div>
                      </StyledComponent>
                    </styled.div>
                    <styled.div
                      hoverColor="#d3d3d330"
                      index={7}
                      key="Aug"
                      onClick={[Function]}
                      primaryColor="#27718c"
                      secondaryColor="white"
                      selected={false}
                    >
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-bxivhb",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "
  ",
                                [Function],
                                "

  &:focus {
    outline: none;
  }

  ",
                                [Function],
                                ";

  padding: 12px 0;
  transition: background-color .1s, color .1s;
  font-size: 14px;
  background-color: ",
                                [Function],
                                ";
  color: ",
                                [Function],
                                ";
  height: 42px;
  display: flex;
  justify-content: center;
  align-items: center;
  flex: 0 0 33.33%;

  border-bottom-right-radius: ",
                                [Function],
                                ";
  border-bottom-left-radius: ",
                                [Function],
                                ";
",
                              ],
                            },
                            "displayName": "styled.div",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-bxivhb",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        hoverColor="#d3d3d330"
                        index={7}
                        onClick={[Function]}
                        primaryColor="#27718c"
                        secondaryColor="white"
                        selected={false}
                      >
                        <div
                          className="c9"
                          onClick={[Function]}
                          selected={false}
                        >
                          Aug
                        </div>
                      </StyledComponent>
                    </styled.div>
                    <styled.div
                      hoverColor="#d3d3d330"
                      index={8}
                      key="Sep"
                      onClick={[Function]}
                      primaryColor="#27718c"
                      secondaryColor="white"
                      selected={false}
                    >
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-bxivhb",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "
  ",
                                [Function],
                                "

  &:focus {
    outline: none;
  }

  ",
                                [Function],
                                ";

  padding: 12px 0;
  transition: background-color .1s, color .1s;
  font-size: 14px;
  background-color: ",
                                [Function],
                                ";
  color: ",
                                [Function],
                                ";
  height: 42px;
  display: flex;
  justify-content: center;
  align-items: center;
  flex: 0 0 33.33%;

  border-bottom-right-radius: ",
                                [Function],
                                ";
  border-bottom-left-radius: ",
                                [Function],
                                ";
",
                              ],
                            },
                            "displayName": "styled.div",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-bxivhb",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        hoverColor="#d3d3d330"
                        index={8}
                        onClick={[Function]}
                        primaryColor="#27718c"
                        secondaryColor="white"
                        selected={false}
                      >
                        <div
                          className="c9"
                          onClick={[Function]}
                          selected={false}
                        >
                          Sep
                        </div>
                      </StyledComponent>
                    </styled.div>
                    <styled.div
                      hoverColor="#d3d3d330"
                      index={9}
                      key="Oct"
                      onClick={[Function]}
                      primaryColor="#27718c"
                      secondaryColor="white"
                      selected={false}
                    >
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-bxivhb",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "
  ",
                                [Function],
                                "

  &:focus {
    outline: none;
  }

  ",
                                [Function],
                                ";

  padding: 12px 0;
  transition: background-color .1s, color .1s;
  font-size: 14px;
  background-color: ",
                                [Function],
                                ";
  color: ",
                                [Function],
                                ";
  height: 42px;
  display: flex;
  justify-content: center;
  align-items: center;
  flex: 0 0 33.33%;

  border-bottom-right-radius: ",
                                [Function],
                                ";
  border-bottom-left-radius: ",
                                [Function],
                                ";
",
                              ],
                            },
                            "displayName": "styled.div",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-bxivhb",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        hoverColor="#d3d3d330"
                        index={9}
                        onClick={[Function]}
                        primaryColor="#27718c"
                        secondaryColor="white"
                        selected={false}
                      >
                        <div
                          className="c10"
                          onClick={[Function]}
                          selected={false}
                        >
                          Oct
                        </div>
                      </StyledComponent>
                    </styled.div>
                    <styled.div
                      hoverColor="#d3d3d330"
                      index={10}
                      key="Nov"
                      onClick={[Function]}
                      primaryColor="#27718c"
                      secondaryColor="white"
                      selected={false}
                    >
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-bxivhb",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "
  ",
                                [Function],
                                "

  &:focus {
    outline: none;
  }

  ",
                                [Function],
                                ";

  padding: 12px 0;
  transition: background-color .1s, color .1s;
  font-size: 14px;
  background-color: ",
                                [Function],
                                ";
  color: ",
                                [Function],
                                ";
  height: 42px;
  display: flex;
  justify-content: center;
  align-items: center;
  flex: 0 0 33.33%;

  border-bottom-right-radius: ",
                                [Function],
                                ";
  border-bottom-left-radius: ",
                                [Function],
                                ";
",
                              ],
                            },
                            "displayName": "styled.div",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-bxivhb",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        hoverColor="#d3d3d330"
                        index={10}
                        onClick={[Function]}
                        primaryColor="#27718c"
                        secondaryColor="white"
                        selected={false}
                      >
                        <div
                          className="c9"
                          onClick={[Function]}
                          selected={false}
                        >
                          Nov
                        </div>
                      </StyledComponent>
                    </styled.div>
                    <styled.div
                      hoverColor="#d3d3d330"
                      index={11}
                      key="Dec"
                      onClick={[Function]}
                      primaryColor="#27718c"
                      secondaryColor="white"
                      selected={false}
                    >
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-bxivhb",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "
  ",
                                [Function],
                                "

  &:focus {
    outline: none;
  }

  ",
                                [Function],
                                ";

  padding: 12px 0;
  transition: background-color .1s, color .1s;
  font-size: 14px;
  background-color: ",
                                [Function],
                                ";
  color: ",
                                [Function],
                                ";
  height: 42px;
  display: flex;
  justify-content: center;
  align-items: center;
  flex: 0 0 33.33%;

  border-bottom-right-radius: ",
                                [Function],
                                ";
  border-bottom-left-radius: ",
                                [Function],
                                ";
",
                              ],
                            },
                            "displayName": "styled.div",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-bxivhb",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        hoverColor="#d3d3d330"
                        index={11}
                        onClick={[Function]}
                        primaryColor="#27718c"
                        secondaryColor="white"
                        selected={false}
                      >
                        <div
                          className="c11"
                          onClick={[Function]}
                          selected={false}
                        >
                          Dec
                        </div>
                      </StyledComponent>
                    </styled.div>
                  </div>
                </StyledComponent>
              </styled.div>
            </div>
          </StyledComponent>
        </styled.div>
      </div>
    </StyledComponent>
  </styled.div>
</MonthPicker>
`;
